/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  Game2048,
  Game2048Interface,
} from "../../types/game-2048/Game2048";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "gameIDtoMoves",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "gameId",
        type: "string",
      },
      {
        internalType: "string",
        name: "moves",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "FEScore",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "randomNumber",
        type: "uint256",
      },
    ],
    name: "verify2048",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506105c5806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806386d198601461003b578063c75fd6e714610064575b600080fd5b61004e610049366004610259565b610077565b60405161005b919061033b565b60405180910390f35b61004e610072366004610355565b6100da565b60608360008660405161008a9190610392565b908152602001604051809103902090816100a49190610450565b5060405183906001906100bf9088908390859060200161056a565b60405160208183030381529060405292505050949350505050565b8051602081830181018051600082529282019190930120915280546100fe906103ae565b80601f016020809104026020016040519081016040528092919081815260200182805461012a906103ae565b80156101775780601f1061014c57610100808354040283529160200191610177565b820191906000526020600020905b81548152906001019060200180831161015a57829003601f168201915b505050505081565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f8301126101bf57600080fd5b813567ffffffffffffffff808211156101da576101da61017f565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019082821181831017156102205761022061017f565b8160405283815286602085880101111561023957600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000806080858703121561026f57600080fd5b843567ffffffffffffffff8082111561028757600080fd5b610293888389016101ae565b955060208701359150808211156102a957600080fd5b506102b6878288016101ae565b949794965050505060408301359260600135919050565b60005b838110156102e85781810151838201526020016102d0565b50506000910152565b600081518084526103098160208601602086016102cd565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061034e60208301846102f1565b9392505050565b60006020828403121561036757600080fd5b813567ffffffffffffffff81111561037e57600080fd5b61038a848285016101ae565b949350505050565b600082516103a48184602087016102cd565b9190910192915050565b600181811c908216806103c257607f821691505b6020821081036103fb577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f82111561044b57600081815260208120601f850160051c810160208610156104285750805b601f850160051c820191505b8181101561044757828155600101610434565b5050505b505050565b815167ffffffffffffffff81111561046a5761046a61017f565b61047e8161047884546103ae565b84610401565b602080601f8311600181146104d1576000841561049b5750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555610447565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b8281101561051e578886015182559484019460019091019084016104ff565b508582101561055a57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b60608152600061057d60608301866102f1565b9315156020830152506040015291905056fea2646970667358221220b7fb104be3dee46095367a48b3fdfa81c757c78533824cd46ed492d490f4271c64736f6c63430008130033";

type Game2048ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Game2048ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Game2048__factory extends ContractFactory {
  constructor(...args: Game2048ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Game2048> {
    return super.deploy(overrides || {}) as Promise<Game2048>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Game2048 {
    return super.attach(address) as Game2048;
  }
  override connect(signer: Signer): Game2048__factory {
    return super.connect(signer) as Game2048__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Game2048Interface {
    return new utils.Interface(_abi) as Game2048Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Game2048 {
    return new Contract(address, _abi, signerOrProvider) as Game2048;
  }
}
